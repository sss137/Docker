# 베이스 이미지
FROM ubuntu:22.04

# 이미지 빌드 시 실행할 명령어 (패키지 설치)
RUN apt update && apt install -y openjdk-11-jdk wget

# 톰캣 9.0 다운로드 명령어
# -P /home/tomcat : 다운로드 경로 지정
RUN wget https://dlcdn.apache.org/tomcat/tomcat-9/v9.0.109/bin/apache-tomcat-9.0.109.tar.gz -P /home/tomcat

# 톰캣 9.0 압축 풀기 명령어
# -C /home/tomcat : 압축 해제 경로 지정
RUN tar -xzvf /home/tomcat/apache-tomcat-9.0.109.tar.gz -C /home/tomcat

# index.html 파일을 이미지 내부 톰캣 9.0 배포 경로로 복사
# CATALINA_HOME/webapps/ROOT에 index.html 파일을 두면 루트 컨텍스트 경로(/)에서 자동으로 열림
COPY index.html /home/tomcat/apache-tomcat-9.0.109/webapps/ROOT/index.html

# 이미지 빌드와 컨테이너 실행 시 사용할 수 있는 환경 변수
ENV JAVA_HOME=/usr/lib/jvm/java-11-openjdk-amd64

# 컨테이너 톰캣 포트 열기
EXPOSE 8080

# 컨테이너 실행 시 수행할 명령어
# run : Foreground 실행. 터미널이 Tomcat 프로세스에 연결되어 로그를 실시간으로 콘솔에 출력 가능. 컨테이너의 메인 프로세스로 유지됨.
CMD ["/home/tomcat/apache-tomcat-9.0.109/bin/catalina.sh", "run"]

### 실행방법
### 1. index.html 만들어 dockerfiles 디렉터리에 두기
### 2. 이미지 빌드 (이미지 만들기)
###    goodee@server1:~/dockerfiles$ docker build -t myubuntu:6.0 -f Dockerfile6 .
### 3. 컨테이너 실행
###    goodee@server1:~/dockerfiles$ docker run -d --name tomcat-server -p 8080:8080 myubuntu:6.0
###    goodee@server1:~/dockerfiles$ docker ps --no-trunc
###    CONTAINER ID      IMAGE          COMMAND
###    10c75cd746ed...   myubuntu:6.0   "/home/tomcat/apache-tomcat-9.0.109/bin/catalina.sh run"  ... <<== CMD 확인 가능
### 4. 브라우저로 접속 확인
###    http://192.168.56.1:8080 접속 시 index.html 파일 확인 가능