도커 이미지 만들기

1. 방식
  1) 도커 컨테이너를 이용해서 도커 이미지를 만들기(docker commit, 비추천)
  2) 원하는 환경을 직접 파일로 구성해서 도커 이미지를 만들기(Dockerfile + docker build, 추천)

2. Dockerfile
  1) 파일명이 Dockerfile입니다. (확장자 없음)
    다른 이름을 사용하려면 -f 옵션으로 사용한 이름을 지정합니다.
  2) 구성 (명령어)
    (1) FROM <이미지>
      베이스 이미지를 지정합니다. 모든 Dockerfile은 반드시 FROM으로 시작해야 합니다. 
    (2) LABEL title="제목" version="버전" description="설명" maintainer="작성자"
      이미지에 대한 정보를 작성합니다.
    (3) RUN <명령어>
      이미지를 만들 때(이미지 빌드할 때) 실행할 리눅스 명령어를 작성합니다.
      RUN apt update
      RUN apt upgrade
      RUN apt update && apt upgrade
    (4) EXPOSE <포트>
      컨테이너가 사용할 열어 줄 포트 번호를 지정합니다.
    (5) WORKDIR <경로>
      컨테이너에 들어가면 보이는 기본 경로를 등록합니다. (docker exec 명령으로 컨테이너에 들어갈 때)
    (6) VOLUME <디렉터리>
      이미지를 만들 때 설정할 볼륨을 작성합니다.
    (7) CMD <[명령어,] 인자, ...>
      컨테이너를 실행할 때 수행할 명령어를 작성합니다. 수행할 명령어를 교체할 수 있습니다.
      CMD ["java", "-jar", "lombok.jar"]
    (8) ENTRYPOINT <명령어, [인자, ...]>
      컨테이너를 실행할 때 수행할 명령어를 작성합니다. 항상 수행할 명령어를 작성합니다.
      ENTRYPOINT ["java", "-jar", "lombok.jar"]
      ENTRYPOINT ["java", "-jar"] + CMD ["lombok.jar"]
    (9) COPY <호스트> <컨테이너>
      호스트 파일 또는 디렉터리를 컨테이너 내부로 복사합니다.
    (10) ADD <호스트> <컨테이너>
      COPY 명령어와 유사하지만 기능이 더 많습니다. URL을 이용한 외부 파일의 복사가 가능하고 압축(.tar) 파일인 경우 자동으로 압축을 풉니다.
    (11) ARG <인자> | ARG <인자=값>
      이미지를 만들 때 사용할 인자를 지정합니다.
    (12) ENV <환경변수> <값>
      환경변수를 설정합니다.